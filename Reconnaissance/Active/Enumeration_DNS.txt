<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>DNS Enumeration</title>
</head><body><b><u>DNS Enumeration<br/>
<br/>
</u>Info <br/>
<br/>
</b>DNS offers a variety of information about public (and sometimes private!) organization servers, such as IP addresses, server names, and server functionality.<br/>
A DNS server will usually divulge DNS and mail server information for the domain it has authority over. This is a necessity, as public requests for mail and DNS server addresses make up the basic Internet experience<br/>
<br/>
<b><br/>
<u>Discover the DNS and Mail Servers For A Domain</u><br/>
<br/>
</b>root@kali:~# host -t ns megacorpone.com<br/>
<br/>
root@kali:~# host -t mx megacorpone.com<br/>
<br/>
Note: ns = name server; mx = mail exchange<br/>
<br/>
<b><br/>
<br/>
<u>Forward Lookup Brute Force</u><br/>
<br/>
</b><b>Info: </b>Guess valid names of servers by attempting to resolve a given name<br/>
<br/>
<b>Command to check One server: </b>root@kali:~# host www.megacorpone.com<br/>
<br/>
<b>Command to check multiple servers: </b>root@kali:~# for ip in $(cat list.txt);do host $ip.megacorpone.com;done <br/>
<b><br/>
</b><b>Note:</b>&nbsp;list contains ftp;mail;owa;proxy;router. i.e hostnames.<br/>
<br/>
<b><br/>
<u>Reverse Lookup Brute Force</u><br/>
<br/>
</b><b>Info: </b>Guess valid names of servers by attempting to resolve an ip address<br/>
<br/>
<b>Command to check multiple servers: </b>root@kali:~# for ip in $(seq 155 190);do host 50.7.67.$ip;done |grep -v "not found"<br/>
<b><br/>
</b><br/>
<b><u>Zone Transfer</u><br/>
<br/>
</b><b>Info: </b>Zone transfer is the process of copying the zone file from a master DNS server to a slave server. The zone file contains a list of all the DNS names configured for that zone. <br/>
<br/>
<b>Command to check One server format: </b>host -l &lt;domain name&gt; &lt;dns server address&gt;<br/>
<br/>
<b>Command to check One server:</b>&nbsp;root@kali:~# host -l megacorpone.com ns1.megacorpone.com<br/>
<br/>
<b>Automated Command: </b><br/>
<br/>
#/bin/bash<br/>
# Simple Zone Transfer Bash Script<br/>
# $1 is the first argument given after the bash script # Check if argument was given, if not, print usage<br/>
if [ -z "$1" ]; then<br/>
echo "[*] Simple Zone transfer script"<br/>
echo "[*] Usage : $0 &lt;domain name&gt; "<br/>
exit 0<br/>
fi<br/>
# if argument was given, identify the DNS servers for the domain<br/>
for server in $(host -t ns $1 |cut -d" " -f4);do<br/>
# For each of these servers, attempt a zone transfer<br/>
host -l $1 $server |grep "has address" done<br/>
<br/>
<b>Run Automated Command<br/>
<br/>
</b>root@kali:~# chmod 755 dns-axfr.sh<br/>
root@kali:~# ./dns-axfr.sh megacorpone.com<br/>
<br/>
<br/>
<b><u>DNSRecon<br/>
<br/>
</u></b><b>Info:</b>&nbsp;DNSRecon is an advanced, modern DNS enumeration script written in Python.<br/>
<br/>
<b>Test NS servers for zone transer and attempt it on all NS servers:</b><br/>
<br/>
root@kali:~# dnsrecon -d megacorpone.com -t axfr<br/>
<br/>
<br/>
<u><b>DNSEnum<br/>
<br/>
</b></u><b>Info:</b>&nbsp;DNS Enumeration tool<br/>
<br/>
<b>Test Domain and get all MX and NS servers. Then attempt Zone Transfer</b><br/>
<br/>
root@kali:~# dnsrecon -d megacorpone.com -t axfr<br/>
<br/>
<br/>
</body></html>