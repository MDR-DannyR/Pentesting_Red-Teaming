<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>SMNP Enumeration</title>
</head><body><b><u>SMNP Enumeration<br/>
<br/>
</u>Info <br/>
</b><br/>
Simple Network Management Protocol. Used to manage a network.<br/>
<br/>
<b>Port</b>&nbsp;TCP 161<br/>
<br/>
SNMP is based on UDP, a simple, stateless protocol, and is therefore susceptible to IP spoofing, and replay attacks. <br/>
In addition, the commonly used SNMP protocols 1, 2, and 2c offer no traffic encryption, meaning SNMP information and credentials can be easily intercepted over a local network. <br/>
Traditional SNMP protocols also have weak authentication schemes, and are commonly left configured with default public and private community strings.<br/>
<br/>
The SNMP Management Information Base (MIB) is a database containing information usually related to network management. <br/>
The database is organized like a tree, where branches represent different organizations or network functions. <br/>
The leaves of the tree (final endpoints) correspond to specific variable values that can then be accessed, and probed, by an external user.<br/>
o http://publib.boulder.ibm.com/infocenter/pseries/v5r3/index.jsp?topic=/com.ibm. aix.progcomm/doc/progcomc/mib.htm<br/>
<br/>
<br/>
<b>MIB values corresponding to specific Microsoft Windows SNMP parameters:<br/>
<br/>
</b>1.3.6.1.2.1.25.1.6.0 -----System Processes<br/>
&nbsp;<br/>
1.3.6.1.2.1.25.4.2.1.2 ---Running Programs<br/>
&nbsp;<br/>
1.3.6.1.2.1.25.4.2.1.4 ---Processes Path<br/>
&nbsp;<br/>
1.3.6.1.2.1.25.2.3.1.4 ---Storage Units<br/>
&nbsp;<br/>
1.3.6.1.2.1.25.6.3.1.2 ---Software Name<br/>
&nbsp;<br/>
1.3.6.1.4.1.77.1.2.25 ----User Accounts<br/>
&nbsp;<br/>
1.3.6.1.2.1.6.13.1.3 ------TCP Local Ports<br/>
<br/>
<b><br/>
</b><b><u>Nmap scan for open SNMP ports</u></b><br/>
<br/>
root@kali:~# nmap -sU --open -p 161 10.11.1.1-254 -oG mega-snmp.txt<br/>
<br/>
<br/>
<b><u>onesixtyone</u><br/>
<br/>
</b><b>Info: </b>Check for given community strings against an IP list. Allows brute force of various community strings.<br/>
<br/>
<b>Commands:<br/>
<br/>
</b>root@kali:~# echo public &gt; community<br/>
root@kali:~# echo private &gt;&gt; community<br/>
root@kali:~# echo manager &gt;&gt; community<br/>
root@kali:~# for ip in $(seq 200 254);do echo 10.11.1.$ip;done &gt; ips root@kali:~# onesixtyone -c community -i ips<br/>
&nbsp;<br/>
<br/>
<b><u>snmpwalk<br/>
<br/>
</u></b><b>Info: </b>provided the SNMP read-only community string (default = public), we can probe and query SNMP values. <br/>
<br/>
<br/>
<b>Windows SNMP Enumeration example:<br/>
<br/>
Enumerating the Entire MIB Tree:<br/>
<br/>
</b>root@kali:~# snmpwalk -c public -v1 10.11.1.219<br/>
<br/>
<b>Enumerating Windows Users:<br/>
<br/>
</b>root@kali:~# snmpwalk –c public –v1 10.11.1.204 1.3.6.1.4.1.77.1.2.25<br/>
<br/>
<b>Enumerating Running Windows Processes:<br/>
<br/>
</b>root@kali:~# snmpwalk -c public -v1 10.11.1.204 1.3.6.1.2.1.25.4.2.1.2<br/>
<br/>
<b>Enumerating Open TCP Ports:<br/>
<br/>
</b>root@kali:~# snmpwalk -c public -v1 10.11.1.204 1.3.6.1.2.1.6.13.1.3<br/>
<br/>
<b>Enumerating Installed Software:</b><br/>
<br/>
root@kali:~# snmpwalk -c public -v1 10.11.1.204 1.3.6.1.2.1.25.6.3.1.2<br/>
<br/>
<u><b><br/>
<br/>
snmpcheck<br/>
<br/>
</b></u><b>Info: </b>SMNP service enumeration tool<br/>
<br/>
<b>Commands</b><br/>
<br/>
root@kali:~# snmp-check -h<br/>
<br/>
root@kali:~# snmp-check -t 192.168.1.2 -c public<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
</body></html>