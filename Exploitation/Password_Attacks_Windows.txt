<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Pwdump and Fgdump</title>
</head><body><b>Password Attacks - Pwdump and Fgdump<br/>
<br/>
</b><b>Info: </b>&nbsp;<br/>
Used on Windows Operating Systems. <br/>
<br/>
MS operating systems store hashed password in the Security Accounts Manager (SAM). <br/>
To deter offline password attacks, MS introduced the SKSKEY feature (Windows NT 4.0 SP3) which partially encrypts the SAM file. <br/>
<br/>
Windows NT-based operating systems, up through and including Windows 2003, store two different password hashes:<ul><li style="list-style-type: none">LAN Manager (LM) - based on DES </li>
<li style="list-style-type: none">NT LAN Manager (NTLM) - based on MD4 hashing. </li>
<li style="list-style-type: none"></li>
</ul>
Windows Vista onwards, LM is disabled by default and uses NTLM. <ul><li style="list-style-type: none"></li>
</ul>
LM is weak for reasons: <ul><li style="list-style-type: none">Passwords longer than 7 characters are split into two strings and each piece is hashed seperately</li>
<li style="list-style-type: none">Password is converted to Upper Case before being hashed</li>
<li style="list-style-type: none">Does not include salts, making rainbow table attacks feasible. </li>
<li style="list-style-type: none">&nbsp;</li>
</ul>
NTLM is:<br/>
<ul><li style="list-style-type: none">Case sensitive</li>
<li style="list-style-type: none">supports all unicode characters</li>
<li style="list-style-type: none">Does not limit stored passwords to two 7 character parts</li>
<li style="list-style-type: none">Not salted.</li>
<li style="list-style-type: none"></li>
</ul>
SAM database cannot be coped with Operating system is running, as kernel keep an exclusive file system lock on the file. However, In memory attacks to dump the SAM hashes can be mounted. <br/>
<br/>
<br/>
<b>Fgdump and pwdump<br/>
</b><br/>
<b>Info</b>: <br/>
Perform in-memory attacks, as they inject a DLL containing the hash dumping code in the Local Security Authrotiy Subsystem (LSASS) process. <br/>
LSASS process has the necessary privileges to extract password hases as well as many useful API that can be used by the hash dumping tool. <br/>
<br/>
Fgump works in a very similar manner to pwdump, however it also attempts to kill local anti-viruses before attempting to dump the password hashes and cached credentials. <br/>
<br/>
C:\&gt;fgdump.exe<br/>
<br/>
C:\&gt;type 127.0.0.1.pwdump<br/>
<br/>
<br/>
<br/>
<b>Windows Credential Editor (WCE)<br/>
<br/>
Info:<br/>
<br/>
</b>Tool to obtain clear text passwords and hases from a compromised windows host. <br/>
Steal NTLM credentials from memory<br/>
dump cleartext password stored by windows authentication packages installed on the system such as msv1_0.dll, kerberos.dll and digest.dll. <br/>
Able to steal credentials either by using DLL injection or by directly reading the LSASS process memory. (LSASS process memory method is more secure in terms of OS stability as it does not inject code into a highly privileged process)<br/>
<br/>
C:\&gt;wce.exe<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
</body></html>