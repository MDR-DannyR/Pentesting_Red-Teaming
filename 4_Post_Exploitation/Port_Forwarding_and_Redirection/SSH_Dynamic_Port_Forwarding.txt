SSH Dynamic Port Forwarding

Info: Set a local listening port and tunnel incoming traffic to any remote destination through a proxy. 

Program: SSH

Set Up:

On Machine A, SSH connect to Machine B (vulnerable victim running ssh on port 22). 

ssh -D <local proxy port> -p <remote port> <target>

ssh -D 8080 -p 22 a.b.c.d

Note: 

-D = Dynamic Port Forwarding (This tells SSH to run a SOCKS proxy on the local proxy port)
local proxy port = Machine A's port that the SOCKS4 proxy will become active on
remote port = Machine B SSH port 
target = Machine B ip address


Run: 

Anything sent through port 8080 on Machine A will now be routed through the SOCKS proxy, then through the SSH tunnel to Machine B and then on to Network C


Usage

Situation: Machine B is a vulnerable victim machine which has SSH running on port 22 and is exposed to the internet. It is part of corporate Network C

Attacker's Machine Victim's Vulnerable Machine Victim's Network connected to the vulnerable machine B
	•	
	•	Machine A <--------------------------> Machine B <------------------------------------------------------------> Network C

SOCKS proxy - 127.0.0.1:8080<--------> a.b.c.d:22 <-----------------------------------------> Network (multiple machines and ports)


Machine B is a vulnerable victim machine which has SSH listening on port 22 and is part of Network C
Machine A SSH connects to Machine B on port 22 using the dynamic port fowarding method, setting the local proxy port as 8080 (on machine A), the remote port at 22 (Machine B's SSH listening port), and the target as Machine Bs IP address
Machine A sends traffic to it's local port 8080 which will then send it through the proxy, onto Machine B, and then onto the Network. 




